{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonuj\\\\Downloads\\\\AgroGuru\\\\frontend\\\\src\\\\components\\\\WeatherCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getWeather, recommendCrop, getTips } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherCard() {\n  _s();\n  const [location, setLocation] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [crops, setCrops] = useState([]);\n  const [cropReason, setCropReason] = useState('');\n  const [tip, setTip] = useState(null);\n\n  // Helper to parse markdown table and extract crop names\n  function parseMarkdownTable(md) {\n    if (!md) return [];\n    const lines = md.trim().split('\\n').map(l => l.trim()).filter(l => l.length > 0);\n    if (lines.length < 2) return [];\n    // Skip header and alignment row(s)\n    let rowStart = 1;\n    while (rowStart < lines.length && /^\\|?\\s*:?[-]+/.test(lines[rowStart])) rowStart++;\n    const rows = lines.slice(rowStart).map(line => line.replace(/^\\|/, '').replace(/\\|$/, '').split('|').map(cell => cell.trim())).filter(row => row.length > 0 && row[0] && row[0].toLowerCase() !== 'crop');\n    // Return just the crop names (first column)\n    return rows.map(row => row[0]);\n  }\n  const handleFetch = async () => {\n    setLoading(true);\n    setError(null);\n    setWeather(null);\n    setCrops([]);\n    setCropReason('');\n    setTip(null);\n    try {\n      const res = await getWeather({\n        location,\n        user_id: 'guest'\n      });\n      setWeather(res.data);\n      // For crop recommendation, use the first forecasted day as the season (simple logic)\n      const today = new Date();\n      let season = '';\n      const month = today.getMonth() + 1;\n      if ([6, 7, 8, 9, 10].includes(month)) season = 'Kharif';else if ([11, 12, 1, 2].includes(month)) season = 'Rabi';else season = 'Zaid';\n      // Fetch crops and tips in parallel\n      const [cropRes, tipRes] = await Promise.all([recommendCrop({\n        location,\n        season,\n        soil: '',\n        user_id: 'guest'\n      }), getTips()]);\n      // Parse markdown table to get crop names\n      let cropList = [];\n      if (cropRes.data && cropRes.data.table) {\n        cropList = parseMarkdownTable(cropRes.data.table);\n      }\n      setCrops(cropList);\n      setCropReason(''); // Optionally, you can add a reason or leave blank\n      if (tipRes.data && tipRes.data.length > 0) {\n        setTip(tipRes.data[Math.floor(Math.random() * tipRes.data.length)]);\n      }\n    } catch (err) {\n      setError('Failed to fetch weather or crops');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Helper to get only today + next 3 days\n  const getForecastDays = weather => {\n    if (!Array.isArray(weather)) return [];\n    return weather.slice(0, 4);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-card rounded-2xl shadow-lg p-6 border border-background-light\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"inline-flex items-center justify-center bg-accent text-background rounded-full w-10 h-10 shadow-md\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          strokeWidth: 1.5,\n          stroke: \"currentColor\",\n          className: \"w-6 h-6\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            d: \"M12 3v1.5m0 15V21m8.485-8.485l-1.06 1.06M4.515 4.515l1.06 1.06M21 12h-1.5M3 12H1.5m16.97 5.485l-1.06-1.06M6.03 17.97l1.06-1.06\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-accent tracking-tight\",\n        children: \"Weather Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col sm:flex-row gap-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border border-background-light bg-background text-gray-100 rounded-lg p-2 flex-1 focus:ring-2 focus:ring-accent outline-none transition\",\n        placeholder: \"Enter Location\",\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-accent hover:bg-primary text-background font-semibold p-2 rounded-lg shadow transition-all duration-200\",\n        onClick: handleFetch,\n        disabled: loading,\n        children: loading ? 'Loading...' : 'Fetch Weather'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"animate-spin h-8 w-8 text-accent\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"opacity-25\",\n          cx: \"12\",\n          cy: \"12\",\n          r: \"10\",\n          stroke: \"currentColor\",\n          strokeWidth: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          className: \"opacity-75\",\n          fill: \"currentColor\",\n          d: \"M4 12a8 8 0 018-8v8z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-400 bg-background-light rounded p-2 border border-red-600 animate-pulse mb-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), weather && getForecastDays(weather).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4 mb-6\",\n      children: getForecastDays(weather).map((w, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-background-light border border-background rounded-xl p-3 shadow flex flex-col items-center min-w-[140px] max-w-[180px] mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold text-accent mb-1 text-base\",\n          children: i === 0 ? 'Today' : `Day ${i + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap justify-center gap-2 w-full mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(WeatherMetric, {\n            icon: \"\\uD83C\\uDF21\\uFE0F\",\n            label: \"Temp\",\n            value: `${w.temp}Â°C`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(WeatherMetric, {\n            icon: \"\\uD83D\\uDCA7\",\n            label: \"Humidity\",\n            value: `${w.humidity}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(WeatherMetric, {\n            icon: \"\\uD83C\\uDF27\\uFE0F\",\n            label: \"Rain\",\n            value: `${w.rain}mm`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(WeatherMetric, {\n            icon: \"\\uD83D\\uDCA8\",\n            label: \"Wind\",\n            value: `${w.wind} m/s`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-400 mt-1 truncate w-full text-center\",\n          title: w.datetime,\n          children: w.datetime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), crops.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-bold text-accent mb-2 flex items-center gap-2\",\n        children: \"\\uD83C\\uDF31 Suitable Crops for This Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-3\",\n        children: crops.map((crop, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bg-accent text-background px-4 py-2 rounded-lg font-semibold shadow\",\n          children: crop\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), cropReason && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-300 text-sm mt-2\",\n        children: cropReason\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), tip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-background-light border-l-4 border-accent rounded shadow text-gray-100 flex items-center gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-2xl\",\n        children: \"\\uD83D\\uDCA1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"text-accent\",\n          children: \"Tip of the Day:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: tip.tip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-400 mt-1\",\n          children: [\"(\", tip.category, \", \", tip.stage, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherCard, \"bEU2k5csq5cUpPRKa4CYoscFsUU=\");\n_c = WeatherCard;\nfunction WeatherMetric({\n  icon,\n  label,\n  value\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center min-w-[48px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-lg\",\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-accent font-semibold text-sm\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-xs text-gray-400\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_c2 = WeatherMetric;\nexport default WeatherCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"WeatherCard\");\n$RefreshReg$(_c2, \"WeatherMetric\");","map":{"version":3,"names":["React","useState","getWeather","recommendCrop","getTips","jsxDEV","_jsxDEV","WeatherCard","_s","location","setLocation","weather","setWeather","loading","setLoading","error","setError","crops","setCrops","cropReason","setCropReason","tip","setTip","parseMarkdownTable","md","lines","trim","split","map","l","filter","length","rowStart","test","rows","slice","line","replace","cell","row","toLowerCase","handleFetch","res","user_id","data","today","Date","season","month","getMonth","includes","cropRes","tipRes","Promise","all","soil","cropList","table","Math","floor","random","err","getForecastDays","Array","isArray","className","children","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","disabled","cx","cy","r","w","i","WeatherMetric","icon","label","temp","humidity","rain","wind","title","datetime","crop","category","stage","_c","_c2","$RefreshReg$"],"sources":["C:/Users/sonuj/Downloads/AgroGuru/frontend/src/components/WeatherCard.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { getWeather, recommendCrop, getTips } from '../api/api';\n\nfunction WeatherCard() {\n  const [location, setLocation] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [crops, setCrops] = useState([]);\n  const [cropReason, setCropReason] = useState('');\n  const [tip, setTip] = useState(null);\n\n  // Helper to parse markdown table and extract crop names\n  function parseMarkdownTable(md) {\n    if (!md) return [];\n    const lines = md.trim().split('\\n').map(l => l.trim()).filter(l => l.length > 0);\n    if (lines.length < 2) return [];\n    // Skip header and alignment row(s)\n    let rowStart = 1;\n    while (rowStart < lines.length && /^\\|?\\s*:?[-]+/.test(lines[rowStart])) rowStart++;\n    const rows = lines.slice(rowStart).map(line =>\n      line.replace(/^\\|/, '').replace(/\\|$/, '').split('|').map(cell => cell.trim())\n    ).filter(row => row.length > 0 && row[0] && row[0].toLowerCase() !== 'crop');\n    // Return just the crop names (first column)\n    return rows.map(row => row[0]);\n  }\n\n  const handleFetch = async () => {\n    setLoading(true); setError(null); setWeather(null); setCrops([]); setCropReason(''); setTip(null);\n    try {\n      const res = await getWeather({ location, user_id: 'guest' });\n      setWeather(res.data);\n      // For crop recommendation, use the first forecasted day as the season (simple logic)\n      const today = new Date();\n      let season = '';\n      const month = today.getMonth() + 1;\n      if ([6,7,8,9,10].includes(month)) season = 'Kharif';\n      else if ([11,12,1,2].includes(month)) season = 'Rabi';\n      else season = 'Zaid';\n      // Fetch crops and tips in parallel\n      const [cropRes, tipRes] = await Promise.all([\n        recommendCrop({ location, season, soil: '', user_id: 'guest' }),\n        getTips()\n      ]);\n      // Parse markdown table to get crop names\n      let cropList = [];\n      if (cropRes.data && cropRes.data.table) {\n        cropList = parseMarkdownTable(cropRes.data.table);\n      }\n      setCrops(cropList);\n      setCropReason(''); // Optionally, you can add a reason or leave blank\n      if (tipRes.data && tipRes.data.length > 0) {\n        setTip(tipRes.data[Math.floor(Math.random() * tipRes.data.length)]);\n      }\n    } catch (err) {\n      setError('Failed to fetch weather or crops');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Helper to get only today + next 3 days\n  const getForecastDays = (weather) => {\n    if (!Array.isArray(weather)) return [];\n    return weather.slice(0, 4);\n  };\n\n  return (\n    <div className=\"bg-card rounded-2xl shadow-lg p-6 border border-background-light\">\n      <div className=\"flex items-center gap-3 mb-3\">\n        <span className=\"inline-flex items-center justify-center bg-accent text-background rounded-full w-10 h-10 shadow-md\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 3v1.5m0 15V21m8.485-8.485l-1.06 1.06M4.515 4.515l1.06 1.06M21 12h-1.5M3 12H1.5m16.97 5.485l-1.06-1.06M6.03 17.97l1.06-1.06\" />\n          </svg>\n        </span>\n        <h2 className=\"text-2xl font-bold text-accent tracking-tight\">Weather Forecast</h2>\n      </div>\n      <div className=\"flex flex-col sm:flex-row gap-2 mb-4\">\n        <input className=\"border border-background-light bg-background text-gray-100 rounded-lg p-2 flex-1 focus:ring-2 focus:ring-accent outline-none transition\" placeholder=\"Enter Location\" value={location} onChange={e => setLocation(e.target.value)} />\n        <button className=\"bg-accent hover:bg-primary text-background font-semibold p-2 rounded-lg shadow transition-all duration-200\" onClick={handleFetch} disabled={loading}>{loading ? 'Loading...' : 'Fetch Weather'}</button>\n      </div>\n      {loading && (\n        <div className=\"flex justify-center items-center py-8\">\n          <svg className=\"animate-spin h-8 w-8 text-accent\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v8z\"></path>\n          </svg>\n        </div>\n      )}\n      {error && <div className=\"text-red-400 bg-background-light rounded p-2 border border-red-600 animate-pulse mb-2\">{error}</div>}\n      {weather && getForecastDays(weather).length > 0 && (\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n          {getForecastDays(weather).map((w, i) => (\n            <div key={i} className=\"bg-background-light border border-background rounded-xl p-3 shadow flex flex-col items-center min-w-[140px] max-w-[180px] mx-auto\">\n              <div className=\"font-semibold text-accent mb-1 text-base\">{i === 0 ? 'Today' : `Day ${i+1}`}</div>\n              <div className=\"flex flex-wrap justify-center gap-2 w-full mb-2\">\n                <WeatherMetric icon=\"ð¡ï¸\" label=\"Temp\" value={`${w.temp}Â°C`} />\n                <WeatherMetric icon=\"ð§\" label=\"Humidity\" value={`${w.humidity}%`} />\n                <WeatherMetric icon=\"ð§ï¸\" label=\"Rain\" value={`${w.rain}mm`} />\n                <WeatherMetric icon=\"ð¨\" label=\"Wind\" value={`${w.wind} m/s`} />\n              </div>\n              <div className=\"text-xs text-gray-400 mt-1 truncate w-full text-center\" title={w.datetime}>{w.datetime}</div>\n            </div>\n          ))}\n        </div>\n      )}\n      {crops.length > 0 && (\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-bold text-accent mb-2 flex items-center gap-2\">ð± Suitable Crops for This Weather</h3>\n          <div className=\"flex flex-wrap gap-3\">\n            {crops.map((crop, i) => (\n              <span key={i} className=\"bg-accent text-background px-4 py-2 rounded-lg font-semibold shadow\">{crop}</span>\n            ))}\n          </div>\n          {cropReason && <div className=\"text-gray-300 text-sm mt-2\">{cropReason}</div>}\n        </div>\n      )}\n      {tip && (\n        <div className=\"mt-4 p-4 bg-background-light border-l-4 border-accent rounded shadow text-gray-100 flex items-center gap-3\">\n          <span className=\"text-2xl\">ð¡</span>\n          <div>\n            <b className=\"text-accent\">Tip of the Day:</b> <span>{tip.tip}</span>\n            <div className=\"text-xs text-gray-400 mt-1\">({tip.category}, {tip.stage})</div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction WeatherMetric({ icon, label, value }) {\n  return (\n    <div className=\"flex flex-col items-center min-w-[48px]\">\n      <span className=\"text-lg\">{icon}</span>\n      <span className=\"text-accent font-semibold text-sm\">{value}</span>\n      <span className=\"text-xs text-gray-400\">{label}</span>\n    </div>\n  );\n}\n\nexport default WeatherCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}