{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonuj\\\\Downloads\\\\AgroGuru\\\\frontend\\\\src\\\\components\\\\CropRecommendationForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { recommendCrop } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst soilTypes = [{\n  name: 'Sandy',\n  img: 'https://upload.wikimedia.org/wikipedia/commons/4/4d/Sandy_soil.jpg'\n}, {\n  name: 'Clay',\n  img: 'https://upload.wikimedia.org/wikipedia/commons/8/8f/Clay_soil.jpg'\n}, {\n  name: 'Silty',\n  img: 'https://upload.wikimedia.org/wikipedia/commons/7/7c/Silt_soil.jpg'\n}, {\n  name: 'Peaty',\n  img: 'https://upload.wikimedia.org/wikipedia/commons/2/2e/Peaty_soil.jpg'\n}, {\n  name: 'Chalky',\n  img: 'https://upload.wikimedia.org/wikipedia/commons/8/8e/Chalky_soil.jpg'\n}, {\n  name: 'Loamy',\n  img: 'https://upload.wikimedia.org/wikipedia/commons/0/0c/Loamy_soil.jpg'\n}];\nconst cropImages = {\n  Wheat: 'https://images.unsplash.com/photo-1504593811423-6dd665756598?auto=format&fit=crop&w=400&q=80',\n  Rice: 'https://images.unsplash.com/photo-1501004318641-b39e6451bec6?auto=format&fit=crop&w=400&q=80',\n  Maize: 'https://images.unsplash.com/photo-1464983953574-0892a716854b?auto=format&fit=crop&w=400&q=80',\n  Sugarcane: 'https://images.unsplash.com/photo-1519125323398-675f0ddb6308?auto=format&fit=crop&w=400&q=80',\n  Cotton: 'https://images.unsplash.com/photo-1502741338009-cac2772e18bc?auto=format&fit=crop&w=400&q=80',\n  Barley: 'https://images.unsplash.com/photo-1465101046530-73398c7f28ca?auto=format&fit=crop&w=400&q=80',\n  Soybean: 'https://images.unsplash.com/photo-1506784983877-45594efa4cbe?auto=format&fit=crop&w=400&q=80'\n};\nconst seasons = ['Kharif', 'Rabi', 'Zaid'];\nfunction parseGeminiCrops(text) {\n  if (!text) return [];\n  const lines = text.split('\\n').map(line => line.trim()).filter(Boolean);\n  const crops = [];\n  let i = 0;\n  while (i < lines.length) {\n    // Look for a line with a bold crop name\n    const cropMatch = lines[i].match(/\\*\\*([^(\\*\\*)]+)\\*\\*/);\n    if (cropMatch) {\n      const name = cropMatch[1].trim();\n      let yieldVal = '';\n      let durationVal = '';\n      // Next line: yield\n      if (i + 1 < lines.length) {\n        const yieldMatch = lines[i + 1].match(/Yield:\\s*([\\d\\-–, ()a-zA-Z]+)\\s*quintals\\/hectare|Yield:\\s*([\\d\\-–, ()a-zA-Z]+)\\s*\\(Green Fodder\\)/i);\n        yieldVal = yieldMatch ? yieldMatch[1] || yieldMatch[2] || lines[i + 1].replace(/Yield:\\s*/i, '').trim() : lines[i + 1].replace(/Yield:\\s*/i, '').trim();\n      }\n      // Next line: duration\n      if (i + 2 < lines.length) {\n        const durationMatch = lines[i + 2].match(/Duration:\\s*([\\d\\-–, ()a-zA-Z]+)\\s*days/i);\n        durationVal = durationMatch ? durationMatch[1] : lines[i + 2].replace(/Duration:\\s*/i, '').trim();\n      }\n      crops.push({\n        name,\n        yield: yieldVal,\n        duration: durationVal\n      });\n      i += 3;\n    } else {\n      i++;\n    }\n  }\n  return crops;\n}\nfunction CropRecommendationForm() {\n  _s();\n  const [form, setForm] = useState({\n    soil: '',\n    season: '',\n    location: ''\n  });\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setResult(null);\n    try {\n      const res = await recommendCrop({\n        ...form,\n        user_id: 'guest'\n      });\n      setResult(res.data);\n    } catch (err) {\n      setError('Failed to get recommendation');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-card rounded-2xl shadow-lg p-6 border border-background-light transition-transform hover:scale-[1.02]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"inline-flex items-center justify-center bg-primary text-white rounded-full w-10 h-10 shadow-md\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          strokeWidth: 1.5,\n          stroke: \"currentColor\",\n          className: \"w-6 h-6\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            d: \"M12 2.25v19.5m9.75-9.75H2.25\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-accent tracking-tight\",\n        children: \"Crop Recommendation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"flex flex-col gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold mb-2 text-accent\",\n          children: \"Choose Soil Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 sm:grid-cols-3 gap-3 mb-2\",\n          children: soilTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `group border-2 rounded-xl flex flex-col items-center p-2 transition shadow hover:shadow-lg focus:outline-none ${form.soil === type.name ? 'border-accent bg-background-light' : 'border-background-light bg-background'}`,\n            onClick: () => setForm({\n              ...form,\n              soil: type.name\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: type.img,\n              alt: type.name + ' soil',\n              className: \"w-24 h-24 object-cover rounded-xl mb-2 border border-background-light group-hover:scale-105 transition\",\n              onError: e => {\n                e.target.onerror = null;\n                e.target.src = 'https://images.unsplash.com/photo-1464983953574-0892a716854b?auto=format&fit=crop&w=400&q=80';\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-100 font-medium\",\n              children: type.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, type.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"border border-background-light bg-background text-gray-100 rounded-lg p-2 focus:ring-2 focus:ring-accent outline-none transition\",\n        required: true,\n        value: form.season,\n        onChange: e => setForm({\n          ...form,\n          season: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Season\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), seasons.map(season => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: season,\n          children: season\n        }, season, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 34\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border border-background-light bg-background text-gray-100 rounded-lg p-2 focus:ring-2 focus:ring-accent outline-none transition\",\n        required: true,\n        placeholder: \"Enter Location\",\n        value: form.location,\n        onChange: e => setForm({\n          ...form,\n          location: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-primary hover:bg-primary-dark text-white font-semibold p-2 rounded-lg shadow transition-all duration-200\",\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Loading...' : 'Get Recommendation'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 text-red-400 bg-background-light rounded p-2 border border-red-600 animate-pulse\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this), result && result.reason && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 mt-4\",\n      children: parseGeminiCrops(result.reason).map((crop, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-background-light rounded-xl shadow p-4 flex flex-col items-center border border-background\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: cropImages[crop.name] || cropImages['Wheat'],\n          alt: crop.name,\n          className: \"w-20 h-20 object-cover rounded-lg mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold text-accent text-lg mb-1\",\n          children: crop.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-100 text-sm mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Yield:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 59\n          }, this), \" \", crop.yield]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-100 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Duration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 54\n          }, this), \" \", crop.duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(CropRecommendationForm, \"aH6C/flZFjUxE75rdZ7KlOFuc6o=\");\n_c = CropRecommendationForm;\nexport default CropRecommendationForm;\nvar _c;\n$RefreshReg$(_c, \"CropRecommendationForm\");","map":{"version":3,"names":["React","useState","recommendCrop","jsxDEV","_jsxDEV","soilTypes","name","img","cropImages","Wheat","Rice","Maize","Sugarcane","Cotton","Barley","Soybean","seasons","parseGeminiCrops","text","lines","split","map","line","trim","filter","Boolean","crops","i","length","cropMatch","match","yieldVal","durationVal","yieldMatch","replace","durationMatch","push","yield","duration","CropRecommendationForm","_s","form","setForm","soil","season","location","result","setResult","loading","setLoading","error","setError","handleSubmit","e","preventDefault","res","user_id","data","err","className","children","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onClick","src","alt","onError","target","onerror","required","value","onChange","placeholder","disabled","reason","crop","_c","$RefreshReg$"],"sources":["C:/Users/sonuj/Downloads/AgroGuru/frontend/src/components/CropRecommendationForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { recommendCrop } from '../api/api';\n\nconst soilTypes = [\n  { name: 'Sandy', img: 'https://upload.wikimedia.org/wikipedia/commons/4/4d/Sandy_soil.jpg' },\n  { name: 'Clay', img: 'https://upload.wikimedia.org/wikipedia/commons/8/8f/Clay_soil.jpg' },\n  { name: 'Silty', img: 'https://upload.wikimedia.org/wikipedia/commons/7/7c/Silt_soil.jpg' },\n  { name: 'Peaty', img: 'https://upload.wikimedia.org/wikipedia/commons/2/2e/Peaty_soil.jpg' },\n  { name: 'Chalky', img: 'https://upload.wikimedia.org/wikipedia/commons/8/8e/Chalky_soil.jpg' },\n  { name: 'Loamy', img: 'https://upload.wikimedia.org/wikipedia/commons/0/0c/Loamy_soil.jpg' }\n];\nconst cropImages = {\n  Wheat: 'https://images.unsplash.com/photo-1504593811423-6dd665756598?auto=format&fit=crop&w=400&q=80',\n  Rice: 'https://images.unsplash.com/photo-1501004318641-b39e6451bec6?auto=format&fit=crop&w=400&q=80',\n  Maize: 'https://images.unsplash.com/photo-1464983953574-0892a716854b?auto=format&fit=crop&w=400&q=80',\n  Sugarcane: 'https://images.unsplash.com/photo-1519125323398-675f0ddb6308?auto=format&fit=crop&w=400&q=80',\n  Cotton: 'https://images.unsplash.com/photo-1502741338009-cac2772e18bc?auto=format&fit=crop&w=400&q=80',\n  Barley: 'https://images.unsplash.com/photo-1465101046530-73398c7f28ca?auto=format&fit=crop&w=400&q=80',\n  Soybean: 'https://images.unsplash.com/photo-1506784983877-45594efa4cbe?auto=format&fit=crop&w=400&q=80'\n};\nconst seasons = ['Kharif', 'Rabi', 'Zaid'];\n\nfunction parseGeminiCrops(text) {\n  if (!text) return [];\n  const lines = text.split('\\n').map(line => line.trim()).filter(Boolean);\n  const crops = [];\n  let i = 0;\n  while (i < lines.length) {\n    // Look for a line with a bold crop name\n    const cropMatch = lines[i].match(/\\*\\*([^(\\*\\*)]+)\\*\\*/);\n    if (cropMatch) {\n      const name = cropMatch[1].trim();\n      let yieldVal = '';\n      let durationVal = '';\n      // Next line: yield\n      if (i + 1 < lines.length) {\n        const yieldMatch = lines[i + 1].match(/Yield:\\s*([\\d\\-–, ()a-zA-Z]+)\\s*quintals\\/hectare|Yield:\\s*([\\d\\-–, ()a-zA-Z]+)\\s*\\(Green Fodder\\)/i);\n        yieldVal = yieldMatch ? (yieldMatch[1] || yieldMatch[2] || lines[i + 1].replace(/Yield:\\s*/i, '').trim()) : lines[i + 1].replace(/Yield:\\s*/i, '').trim();\n      }\n      // Next line: duration\n      if (i + 2 < lines.length) {\n        const durationMatch = lines[i + 2].match(/Duration:\\s*([\\d\\-–, ()a-zA-Z]+)\\s*days/i);\n        durationVal = durationMatch ? durationMatch[1] : lines[i + 2].replace(/Duration:\\s*/i, '').trim();\n      }\n      crops.push({\n        name,\n        yield: yieldVal,\n        duration: durationVal\n      });\n      i += 3;\n    } else {\n      i++;\n    }\n  }\n  return crops;\n}\n\nfunction CropRecommendationForm() {\n  const [form, setForm] = useState({ soil: '', season: '', location: '' });\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true); setError(null); setResult(null);\n    try {\n      const res = await recommendCrop({ ...form, user_id: 'guest' });\n      setResult(res.data);\n    } catch (err) {\n      setError('Failed to get recommendation');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-card rounded-2xl shadow-lg p-6 border border-background-light transition-transform hover:scale-[1.02]\">\n      <div className=\"flex items-center gap-3 mb-3\">\n        <span className=\"inline-flex items-center justify-center bg-primary text-white rounded-full w-10 h-10 shadow-md\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 2.25v19.5m9.75-9.75H2.25\" />\n          </svg>\n        </span>\n        <h2 className=\"text-2xl font-bold text-accent tracking-tight\">Crop Recommendation</h2>\n      </div>\n      <form onSubmit={handleSubmit} className=\"flex flex-col gap-3\">\n        <div>\n          <div className=\"font-semibold mb-2 text-accent\">Choose Soil Type:</div>\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-3 mb-2\">\n            {soilTypes.map(type => (\n              <button\n                type=\"button\"\n                key={type.name}\n                className={`group border-2 rounded-xl flex flex-col items-center p-2 transition shadow hover:shadow-lg focus:outline-none ${form.soil === type.name ? 'border-accent bg-background-light' : 'border-background-light bg-background'}`}\n                onClick={() => setForm({ ...form, soil: type.name })}\n              >\n                <img src={type.img} alt={type.name + ' soil'} className=\"w-24 h-24 object-cover rounded-xl mb-2 border border-background-light group-hover:scale-105 transition\" onError={e => { e.target.onerror = null; e.target.src = 'https://images.unsplash.com/photo-1464983953574-0892a716854b?auto=format&fit=crop&w=400&q=80'; }} />\n                <span className=\"text-gray-100 font-medium\">{type.name}</span>\n              </button>\n            ))}\n          </div>\n        </div>\n        <select className=\"border border-background-light bg-background text-gray-100 rounded-lg p-2 focus:ring-2 focus:ring-accent outline-none transition\" required value={form.season} onChange={e => setForm({ ...form, season: e.target.value })}>\n          <option value=\"\">Season</option>\n          {seasons.map(season => <option key={season} value={season}>{season}</option>)}\n        </select>\n        <input className=\"border border-background-light bg-background text-gray-100 rounded-lg p-2 focus:ring-2 focus:ring-accent outline-none transition\" required placeholder=\"Enter Location\" value={form.location} onChange={e => setForm({ ...form, location: e.target.value })} />\n        <button className=\"bg-primary hover:bg-primary-dark text-white font-semibold p-2 rounded-lg shadow transition-all duration-200\" type=\"submit\" disabled={loading}>{loading ? 'Loading...' : 'Get Recommendation'}</button>\n      </form>\n      {error && <div className=\"mt-3 text-red-400 bg-background-light rounded p-2 border border-red-600 animate-pulse\">{error}</div>}\n      {result && result.reason && (\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 mt-4\">\n          {parseGeminiCrops(result.reason).map((crop, i) => (\n            <div key={i} className=\"bg-background-light rounded-xl shadow p-4 flex flex-col items-center border border-background\">\n              <img\n                src={cropImages[crop.name] || cropImages['Wheat']}\n                alt={crop.name}\n                className=\"w-20 h-20 object-cover rounded-lg mb-2\"\n              />\n              <div className=\"font-bold text-accent text-lg mb-1\">{crop.name}</div>\n              <div className=\"text-gray-100 text-sm mb-1\"><b>Yield:</b> {crop.yield}</div>\n              <div className=\"text-gray-100 text-sm\"><b>Duration:</b> {crop.duration}</div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\nexport default CropRecommendationForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}