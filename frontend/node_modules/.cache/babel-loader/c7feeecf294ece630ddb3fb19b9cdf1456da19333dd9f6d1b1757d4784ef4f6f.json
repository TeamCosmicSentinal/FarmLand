{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonuj\\\\Downloads\\\\AgroGuru\\\\frontend\\\\src\\\\components\\\\CropHealthIndicator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getCropHealth } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CropHealthIndicator() {\n  _s();\n  const [health, setHealth] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    getCropHealth().then(res => setHealth(res.data)).catch(() => setError('Failed to fetch crop health')).finally(() => setLoading(false));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded shadow flex items-center gap-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold\",\n      children: \"Crop Health\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-blue-600\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-red-600\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), health && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `w-6 h-6 rounded-full ${health.status === 'green' ? 'bg-green-500' : 'bg-red-500'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: health ? `NDVI: ${health.ndvi}` : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(CropHealthIndicator, \"0KuNS2gZnCrXjksQk4WruC4AFpY=\");\n_c = CropHealthIndicator;\nexport default CropHealthIndicator;\nvar _c;\n$RefreshReg$(_c, \"CropHealthIndicator\");","map":{"version":3,"names":["React","useEffect","useState","getCropHealth","jsxDEV","_jsxDEV","CropHealthIndicator","_s","health","setHealth","loading","setLoading","error","setError","then","res","data","catch","finally","className","children","fileName","_jsxFileName","lineNumber","columnNumber","status","ndvi","_c","$RefreshReg$"],"sources":["C:/Users/sonuj/Downloads/AgroGuru/frontend/src/components/CropHealthIndicator.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getCropHealth } from '../api/api';\n\nfunction CropHealthIndicator() {\n  const [health, setHealth] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true); setError(null);\n    getCropHealth().then(res => setHealth(res.data)).catch(() => setError('Failed to fetch crop health')).finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <div className=\"bg-white p-4 rounded shadow flex items-center gap-4\">\n      <h2 className=\"text-xl font-semibold\">Crop Health</h2>\n      {loading && <span className=\"text-blue-600\">Loading...</span>}\n      {error && <span className=\"text-red-600\">{error}</span>}\n      {health && (\n        <div className={`w-6 h-6 rounded-full ${health.status === 'green' ? 'bg-green-500' : 'bg-red-500'}`}></div>\n      )}\n      <span>{health ? `NDVI: ${health.ndvi}` : ''}</span>\n    </div>\n  );\n}\nexport default CropHealthIndicator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,IAAI,CAAC;IAAEE,QAAQ,CAAC,IAAI,CAAC;IAChCV,aAAa,CAAC,CAAC,CAACW,IAAI,CAACC,GAAG,IAAIN,SAAS,CAACM,GAAG,CAACC,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAMJ,QAAQ,CAAC,6BAA6B,CAAC,CAAC,CAACK,OAAO,CAAC,MAAMP,UAAU,CAAC,KAAK,CAAC,CAAC;EACxI,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKc,SAAS,EAAC,qDAAqD;IAAAC,QAAA,gBAClEf,OAAA;MAAIc,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrDd,OAAO,iBAAIL,OAAA;MAAMc,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC5DZ,KAAK,iBAAIP,OAAA;MAAMc,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAER;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACtDhB,MAAM,iBACLH,OAAA;MAAKc,SAAS,EAAE,wBAAwBX,MAAM,CAACiB,MAAM,KAAK,OAAO,GAAG,cAAc,GAAG,YAAY;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAC3G,eACDnB,OAAA;MAAAe,QAAA,EAAOZ,MAAM,GAAG,SAASA,MAAM,CAACkB,IAAI,EAAE,GAAG;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAACjB,EAAA,CArBQD,mBAAmB;AAAAqB,EAAA,GAAnBrB,mBAAmB;AAsB5B,eAAeA,mBAAmB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}